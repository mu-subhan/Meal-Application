{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Subhan\\\\Desktop\\\\react-projects\\\\meals-application\\\\src\\\\context.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst allMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\nconst randomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php';\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [meals, setMeals] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [showModal, setShowModel] = useState(true);\n\n  //  . then async/await alsow invoke data here/function\n  // .fetch (url ).then invoke it \n  // we are using useEffect here to fetch data or axios from any url \n\n  const fetchMeals = async url => {\n    setLoading(true);\n    try {\n      const {\n        data\n      } = await axios(url);\n      if (data.meals) {\n        setMeals(data.meals);\n      } else {\n        setMeals([]);\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n    setLoading(false);\n  };\n  const fetchRandomMeal = () => {\n    fetchMeals(randomMealUrl);\n  };\n  useEffect(() => {\n    fetchMeals(allMealsUrl);\n  }, []);\n  useEffect(() => {\n    // console.log('fetch data here')\n    if (!searchTerm) return;\n    fetchMeals(`${allMealsUrl}${searchTerm}`);\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      meals,\n      setSearchTerm,\n      fetchRandomMeal,\n      showModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s(AppProvider, \"GfzI2cr1meA+N1Zk/YYc73wUtTA=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useState","axios","jsxDEV","_jsxDEV","AppContext","createContext","allMealsUrl","randomMealUrl","AppProvider","children","_s","loading","setLoading","meals","setMeals","searchTerm","setSearchTerm","showModal","setShowModel","fetchMeals","url","data","error","console","log","response","fetchRandomMeal","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/Subhan/Desktop/react-projects/meals-application/src/context.jsx"],"sourcesContent":["import React,{useContext,useEffect,useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AppContext = React.createContext()\r\n\r\n\r\nconst allMealsUrl = 'https://www.themealdb.com/api/json/v1/1/search.php?s='\r\nconst randomMealUrl = 'https://www.themealdb.com/api/json/v1/1/random.php'\r\n\r\n\r\n\r\nconst AppProvider = ({children})=>{\r\nconst [loading,setLoading] = useState(false)\r\nconst [meals,setMeals] = useState([]) \r\nconst [searchTerm,setSearchTerm] = useState(\"\")\r\n\r\nconst [showModal,setShowModel] = useState(true)\r\n\r\n  //  . then async/await alsow invoke data here/function\r\n    // .fetch (url ).then invoke it \r\n    // we are using useEffect here to fetch data or axios from any url \r\n   \r\n    const fetchMeals = async (url) =>{\r\n        setLoading(true)\r\n        try{\r\n            const {data} = await axios(url)\r\n        if(data.meals){\r\n            setMeals(data.meals)\r\n        }  \r\n         else{\r\n            setMeals([])\r\n         }   \r\n        }\r\n        catch(error){\r\n            console.log(error.response)\r\n         }\r\n         setLoading(false)\r\n    }\r\n\r\n    const fetchRandomMeal = ()=>{\r\n        fetchMeals(randomMealUrl)\r\n    }\r\n    useEffect(()=>{\r\n        \r\n        \r\n        fetchMeals(allMealsUrl);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // console.log('fetch data here')\r\n        if(!searchTerm) return\r\n        fetchMeals(`${allMealsUrl}${searchTerm}`);\r\n    },[searchTerm])\r\n    return <AppContext.Provider value={{loading,meals,\r\n    setSearchTerm,fetchRandomMeal,showModal}}>\r\n        {children}\r\n    </AppContext.Provider>\r\n\r\n}\r\n\r\nexport const useGlobalContext=()=>{\r\n return useContext(AppContext)   \r\n}\r\n\r\nexport {AppContext,AppProvider};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAEC,UAAU,EAACC,SAAS,EAACC,QAAQ,QAAO,OAAO;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,gBAAGP,KAAK,CAACQ,aAAa,CAAC,CAAC;AAGxC,MAAMC,WAAW,GAAG,uDAAuD;AAC3E,MAAMC,aAAa,GAAG,oDAAoD;AAI1E,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACe,UAAU,EAACC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE/C,MAAM,CAACiB,SAAS,EAACC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;;EAE7C;EACE;EACA;;EAEA,MAAMmB,UAAU,GAAG,MAAOC,GAAG,IAAI;IAC7BR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACC,MAAM;QAACS;MAAI,CAAC,GAAG,MAAMpB,KAAK,CAACmB,GAAG,CAAC;MACnC,IAAGC,IAAI,CAACR,KAAK,EAAC;QACVC,QAAQ,CAACO,IAAI,CAACR,KAAK,CAAC;MACxB,CAAC,MACI;QACDC,QAAQ,CAAC,EAAE,CAAC;MACf;IACD,CAAC,CACD,OAAMQ,KAAK,EAAC;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,QAAQ,CAAC;IAC9B;IACAb,UAAU,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMc,eAAe,GAAGA,CAAA,KAAI;IACxBP,UAAU,CAACZ,aAAa,CAAC;EAC7B,CAAC;EACDR,SAAS,CAAC,MAAI;IAGVoB,UAAU,CAACb,WAAW,CAAC;EAC3B,CAAC,EAAC,EAAE,CAAC;EAELP,SAAS,CAAC,MAAI;IACV;IACA,IAAG,CAACgB,UAAU,EAAE;IAChBI,UAAU,CAAE,GAAEb,WAAY,GAAES,UAAW,EAAC,CAAC;EAC7C,CAAC,EAAC,CAACA,UAAU,CAAC,CAAC;EACf,oBAAOZ,OAAA,CAACC,UAAU,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAACjB,OAAO;MAACE,KAAK;MACjDG,aAAa;MAACU,eAAe;MAACT;IAAS,CAAE;IAAAR,QAAA,EACpCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE1B,CAAC;AAAAtB,EAAA,CA/CKF,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAiDjB,OAAO,MAAM0B,gBAAgB,GAACA,CAAA,KAAI;EAAAC,GAAA;EACjC,OAAOrC,UAAU,CAACM,UAAU,CAAC;AAC9B,CAAC;AAAA+B,GAAA,CAFYD,gBAAgB;AAI7B,SAAQ9B,UAAU,EAACI,WAAW;AAAE,IAAAyB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}